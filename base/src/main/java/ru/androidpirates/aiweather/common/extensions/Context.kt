package ru.androidpirates.aiweather.common.extensions

import android.content.Context
import android.graphics.drawable.Drawable
import android.support.annotation.ColorInt
import android.support.annotation.ColorRes
import android.support.annotation.DrawableRes
import android.support.v4.content.ContextCompat
import android.util.TypedValue
import ru.androidpirates.aiweather.base.R

fun Context.statusBarHeight(): Int {
    //always 24dp
    val resourceId = resources.getIdentifier("status_bar_height", "dimen", "android")
    return if (resourceId <= 0) 0 else resources.getDimensionPixelSize(resourceId)
}

fun Context.getActionBarSize(): Int {
    //always 56dp
    val a = obtainStyledAttributes(intArrayOf(android.R.attr.actionBarSize))
    try {
        return a.getDimension(0, 0f).toInt()
    } finally {
        a.recycle()
    }
}

fun Context.dpToPx(value: Float): Int {
    return if (value != 0f)
        Math.ceil((resources.displayMetrics.density * value).toDouble()).toInt()
    else 0
}

fun Context.getSelectableBackgroundBorderless(): Drawable? {
    val outValue = TypedValue()
    theme.resolveAttribute(R.attr.selectableItemBackgroundBorderless, outValue, true)
    return getDrawableCompat(outValue.resourceId)
}

/**
 * Returns a drawable object associated with a particular resource ID.
 *
 *
 * Starting in [android.os.Build.VERSION_CODES.LOLLIPOP], the
 * returned drawable will be styled for the specified Context's theme.
 *
 * @param id The desired resource identifier, as generated by the aapt tool.
 * This integer encodes the package, type, and resource entry.
 * The value 0 is an invalid identifier.
 * @return Drawable An object that can be used to draw this resource.
 */
fun Context.getDrawableCompat(@DrawableRes id: Int): Drawable? {
    return ContextCompat.getDrawable(this, id)
}

/**
 * Returns a color associated with a particular resource ID
 *
 *
 * Starting in [android.os.Build.VERSION_CODES.M], the returned
 * color will be styled for the specified Context's theme.
 *
 * @param id The desired resource identifier, as generated by the aapt
 * tool. This integer encodes the package, type, and resource
 * entry. The value 0 is an invalid identifier.
 * @return A single color value in the form 0xAARRGGBB.
 * @throws android.content.res.Resources.NotFoundException if the given ID
 * does not exist.
 */
@ColorInt fun Context.getColorCompat(@ColorRes id: Int): Int {
    return ContextCompat.getColor(this, id)
}